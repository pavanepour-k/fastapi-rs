from typing import Any, Callable, Dict, List, Optional, Union

from .base import Param, ParamTypes


class File(Param):
    in_ = ParamTypes.file

    def __init__(
        self,
        default: Any = ...,
        *,
        default_factory: Union[Callable[[], Any], None] = None,
        alias: Optional[str] = None,
        alias_priority: Union[int, None] = None,
        validation_alias: Union[str, None] = None,
        serialization_alias: Union[str, None] = None,
        title: Optional[str] = None,
        description: Optional[str] = None,
        gt: Optional[float] = None,
        ge: Optional[float] = None,
        lt: Optional[float] = None,
        le: Optional[float] = None,
        min_length: Optional[int] = None,
        max_length: Optional[int] = None,
        pattern: Optional[str] = None,
        regex: Optional[str] = None,
        discriminator: Union[str, None] = None,
        strict: Union[bool, None] = None,
        multiple_of: Union[float, None] = None,
        allow_inf_nan: Union[bool, None] = None,
        max_digits: Union[int, None] = None,
        decimal_places: Union[int, None] = None,
        examples: Optional[List[Any]] = None,
        example: Optional[Any] = None,
        openapi_examples: Optional[Dict[str, Dict[str, Any]]] = None,
        deprecated: Optional[bool] = None,
        include_in_schema: bool = True,
        json_schema_extra: Union[Dict[str, Any], None] = None,
        media_type: str = "multipart/form-data",
        **extra: Any,
    ):
        self.media_type = media_type
        super().__init__(
            default=default,
            default_factory=default_factory,
            alias=alias,
            alias_priority=alias_priority,
            validation_alias=validation_alias,
            serialization_alias=serialization_alias,
            title=title,
            description=description,
            gt=gt,
            ge=ge,
            lt=lt,
            le=le,
            min_length=min_length,
            max_length=max_length,
            pattern=pattern,
            regex=regex,
            discriminator=discriminator,
            strict=strict,
            multiple_of=multiple_of,
            allow_inf_nan=allow_inf_nan,
            max_digits=max_digits,
            decimal_places=decimal_places,
            examples=examples,
            example=example,
            openapi_examples=openapi_examples,
            deprecated=deprecated,
            include_in_schema=include_in_schema,
            json_schema_extra=json_schema_extra,
            **extra,
        )